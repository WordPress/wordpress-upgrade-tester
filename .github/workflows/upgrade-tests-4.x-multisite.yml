name: Upgrade Tests (WP 4.x - Multisite - Sub-directory)

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'The new version'
        type: string
        required: true

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured at the job level.
permissions: {}

jobs:
  # Runs upgrade tests on a build of WordPress.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Starts the MySQL server.
  # - Sets up PHP.
  # - Downloads and installs an earlier version of WordPress.
  # - Upgrades to the new version of WordPress.
  upgrade-tests:
    name: ${{ matrix.wp }}-${{ inputs.new_version }} (MS - Subdir) on PHP ${{ matrix.php }}, MySQL ${{ matrix.mysql }}
    permissions:
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2' ]
        mysql: [ '5.7', '8.0' ]
        wp: [ '4.1', '4.2', '4.3', '4.4', '4.5' ]
        include:
          # These versions trigger fatals in PHP 8+ for use of __autoload() or array/string offset with curly braces.

          # WP 4.6, PHP 7.0-7.4, MySQL 5.7
          - wp: '4.6'
            php: '7.0'
            mysql: '5.7'
          - wp: '4.6'
            php: '7.1'
            mysql: '5.7'
          - wp: '4.6'
            php: '7.2'
            mysql: '5.7'
          - wp: '4.6'
            php: '7.3'
            mysql: '5.7'
          - wp: '4.6'
            php: '7.4'
            mysql: '5.7'

          # WP 4.6, PHP 7.0-7.4, MySQL 8.0
          - wp: '4.6'
            php: '7.0'
            mysql: '8.0'
          - wp: '4.6'
            php: '7.1'
            mysql: '8.0'
          - wp: '4.6'
            php: '7.2'
            mysql: '8.0'
          - wp: '4.6'
            php: '7.3'
            mysql: '8.0'
          - wp: '4.6'
            php: '7.4'
            mysql: '8.0'

          # WP 4.7, PHP 7.0-7.4, MySQL 5.7
          - wp: '4.7'
            php: '7.0'
            mysql: '5.7'
          - wp: '4.7'
            php: '7.1'
            mysql: '5.7'
          - wp: '4.7'
            php: '7.2'
            mysql: '5.7'
          - wp: '4.7'
            php: '7.3'
            mysql: '5.7'
          - wp: '4.7'
            php: '7.4'
            mysql: '5.7'

          # WP 4.7, PHP 7.0-7.4, MySQL 8.0
          - wp: '4.7'
            php: '7.0'
            mysql: '8.0'
          - wp: '4.7'
            php: '7.1'
            mysql: '8.0'
          - wp: '4.7'
            php: '7.2'
            mysql: '8.0'
          - wp: '4.7'
            php: '7.3'
            mysql: '8.0'
          - wp: '4.7'
            php: '7.4'
            mysql: '8.0'

          # WP 4.8, PHP 7.0-7.4, MySQL 5.7
          - wp: '4.8'
            php: '7.0'
            mysql: '5.7'
          - wp: '4.8'
            php: '7.1'
            mysql: '5.7'
          - wp: '4.8'
            php: '7.2'
            mysql: '5.7'
          - wp: '4.8'
            php: '7.3'
            mysql: '5.7'
          - wp: '4.8'
            php: '7.4'
            mysql: '5.7'

          # WP 4.8, PHP 7.0-7.4, MySQL 8.0
          - wp: '4.8'
            php: '7.0'
            mysql: '8.0'
          - wp: '4.8'
            php: '7.1'
            mysql: '8.0'
          - wp: '4.8'
            php: '7.2'
            mysql: '8.0'
          - wp: '4.8'
            php: '7.3'
            mysql: '8.0'
          - wp: '4.8'
            php: '7.4'
            mysql: '8.0'

          # WP 4.9, PHP 7.0-7.4, MySQL 5.7
          - wp: '4.9'
            php: '7.0'
            mysql: '5.7'
          - wp: '4.9'
            php: '7.1'
            mysql: '5.7'
          - wp: '4.9'
            php: '7.2'
            mysql: '5.7'
          - wp: '4.9'
            php: '7.3'
            mysql: '5.7'
          - wp: '4.9'
            php: '7.4'
            mysql: '5.7'

          # WP 4.9, PHP 7.0-7.4, MySQL 8.0
          - wp: '4.9'
            php: '7.0'
            mysql: '8.0'
          - wp: '4.9'
            php: '7.1'
            mysql: '8.0'
          - wp: '4.9'
            php: '7.2'
            mysql: '8.0'
          - wp: '4.9'
            php: '7.3'
            mysql: '8.0'
          - wp: '4.9'
            php: '7.4'
            mysql: '8.0'

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=30s --health-timeout=10s --health-retries=5 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test_db --entrypoint sh mysql:${{ matrix.mysql }} -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"

    steps:
      - name: Checkout the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

      - name: Set up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@d30ad8b1843ace22e6698ab99bbafaa747b6bd0d # v2.24.0
        with:
          php-version: '${{ matrix.php }}'
          coverage: none
          tools: wp-cli

      - name: Start the MySQL server
        run: |
          sudo systemctl start mysql

      - name: Download and install WordPress ${{ matrix.wp }}
        run: |
          wp core download --version=${{ matrix.wp }}
          wp config create --dbname=test_db --dbuser=root --dbpass=root --dbhost=127.0.0.1:${{ job.services.mysql.ports['3306'] }}
          wp core multisite-install --url=http://localhost/ --title="Upgrade Test" --admin_user=admin --admin_password=password --admin_email=me@example.org --skip-email
          wp core update --minor

      - name: Upgrade to WordPress ${{ inputs.new_version }}
        run: |
          wp core update --version=${{ inputs.new_version }}